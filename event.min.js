/*! lil-event - v0.1 - MIT License - https://github.com/lil-js/event */
(function(t,e){if(typeof define==="function"&&define.amd){define(["exports"],e)}else if(typeof exports==="object"){e(exports);if(typeof module==="object"&&module!==null){module.exports=exports.Event}}else{e(t.lil=t.lil||{})}})(this,function(t){var e="0.1.0";var n=Array.prototype.slice;var r=Object.prototype.hasOwnProperty;function o(){}o.prototype.constructor=o;o.prototype.addListener=o.prototype.on=function(t,e,n){var r=this._getListeners(t);if(typeof t!=="string")throw new TypeError("First argument must be a string");if(typeof e!=="function")throw new TypeError("Second argument must be a function");if(!this._findListener(t,e)){r.push({fn:e,once:n||false})}return this};o.prototype.removeListener=o.prototype.off=function(t,e){var n;var r=this._getListeners(t);var o=this._findListener(t,e);if(o){n=r.indexOf(o);if(n>=0)r.splice(n,1)}return this};o.prototype.addOnceListener=o.prototype.once=function(t,e,n){this.addListener(t,e,true);return this};o.prototype.emit=o.prototype.fire=function(t){var e,r,o,i=n.call(arguments).slice(1);var s=this._getListeners(t);if(t){for(e=0,r=s.length;e<r;e+=1){o=s[e];if(o.once)s.splice(e,1);o.fn.apply(null,i)}}return this};o.prototype._findListener=function(t,e){var n,r,o=this._getListeners(t);for(n=0,r=o.length;n<r;n+=1){if(o[n].fn===e)return o[n]}};o.prototype._getListeners=function(t,e){var n=this._getEvents();return r.call(n,t)?n[t]:n[t]=[]};o.prototype._getEvents=function(){return this._events||(this._events={})};o.prototype.toString=function(){return"[object Event]"};o.VERSION=e;t.Event=o});
//# sourceMappingURL=event.min.js.map